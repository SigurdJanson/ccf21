% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ccf21.R
\name{.Shift_ccf}
\alias{.Shift_ccf}
\title{.Shift_ccf
Shifts the elements of a vector by k positions. Empty positions can be replaced
by an arbitrary value or the shifting is treated cyclic, i.e. elements shifted out
on the one end will come back on the other.}
\usage{
.Shift_ccf(y, k, replace = FALSE)
}
\arguments{
\item{y}{A vector or time series.}

\item{k}{How many elements 'y' to be shifted. k < 0 shifts to the left, k > 0 to the right.}

\item{replace}{How to treat vector elements that get lost. See details}
}
\value{
A new shifted vector.
}
\description{
.Shift_ccf
Shifts the elements of a vector by k positions. Empty positions can be replaced
by an arbitrary value or the shifting is treated cyclic, i.e. elements shifted out
on the one end will come back on the other.
}
\details{
Shifting to the left leaves open elements on the right
and vice versa. This function offers three ways to handle the fact that
elements get lost through shifting.
\itemize{
\item \code{replace = FALSE}: cut it (today's default),
\item \code{replace = TRUE}:  wrap it back assuming the sequence is circular.
\item \code{replace = as.double(anyhting)}: or fill it with data.
}
}
\author{
Jan Seifert
}
